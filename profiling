#!/usr/bin/env bash
set -euo pipefail

# pip install pyprof2calltree
function perf_profile {
  local name="$1"
  echo ">>> PERF per ${name}..."
  # registra in perf-<name>.data
  perf record -F 99 -g -o perf-${name}.data -- ./lgp
  perf stat -d -- ./lgp || true
  # converte con pyprof2calltree (usa il pipe di perf script)
  perf script -i perf-${name}.data \
    > report-perf-${name}.calltree

  rm -f perf-${name}.data
}

function gprof_profile {
  local name="$1"
  echo ">>> GPROF per ${name}..."
  ./lgp
  gprof ./lgp gmon.out > report-gprof-${name}.txt
  rm -f gmon.out
}


function callgrind_profile {
  local name="$1"
  echo ">>> CALLGRIND per ${name}..."

  valgrind --tool=callgrind \
           --dump-instr=yes \
           --simulate-cache=yes \
           --callgrind-out-file=callgrind-${name}.out \
           ./lgp

  callgrind_annotate --auto=yes callgrind-${name}.out \
    > report-callgrind-${name}.txt

  rm -f callgrind-${name}.out
}

function causal_profile {
  local name="$1"
  echo ">>> COZ Causal Profiler per ${name}..."

  coz record -o coz-${name}.coz -- ./lgp
  coz report --html report-coz-${name}.html
}

function evaluate {
  local name="$1"
  make clean
  make "$name"
  perf_profile "$name"
  gprof_profile "$name"
  callgrind_profile "$name"
  causal_profile "$name" || echo "Coz non installato"
}

evaluate avx512
evaluate avx2
evaluate sse2
evaluate single
